plugins {
    id 'java'
    id 'war'
    id "com.bmuschko.cargo" version "2.3"
}

group 'com.danverem'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8


ext.setProperty("payaraHome", project.findProperty('payaraHome')?: System.getenv("PAYARA_HOME"))
ext.setProperty("payaraHostname", project.findProperty('payaraHostname') ?: "localhost")
ext.setProperty("payaraUsername", project.findProperty('payaraUsername') ?: "admin")
ext.setProperty("payaraPassword", project.findProperty('payaraPassword') ?: "")

println "Payara Home: \"${payaraHome}\""
println "Payara Hostname: \"${payaraHostname}\""
println "Payara Username: \"${payaraUsername}\""
println "Payara Password: \"${payaraPassword}\""


repositories {
    mavenCentral()
    maven {
        url "https://maven.java.net/content/repositories/promoted/"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.jboss.arquillian:arquillian-bom:1.1.14.Final'
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.14.Final'
    testCompile 'org.jboss.arquillian.testng:arquillian-testng-container:1.1.14.Final'
    testCompile 'org.testng:testng:6.9.10'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.26'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.10.4'
    compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.7.0'
    providedCompile 'javax:javaee-api:8.0'
    cargo 'org.glassfish.main.deployment:deployment-client:5.0'
    cargo 'org.codehaus.cargo:cargo-ant:1.6.8'
}

cargo {
    // Configures which commands require a built artifact
    cargoRunLocal.dependsOn war
    cargoStartLocal.dependsOn war
    cargoDeployRemote.dependsOn war
    cargoRedeployRemote.dependsOn war
    cargoRedeployLocal.dependsOn war

    containerId = 'glassfish4x'

    deployable {
        context = "/"
    }

    local {
        homeDir = file(payaraHome)
    }

    remote {
        hostname = payaraHostname
        username = payaraUsername
        password = payaraPassword
        containerProperties {
            // this is necessary only to pass blank password correctly to the cargo deployer because of a bug in the cargo gradle plugin
            property 'cargo.remote.password', payaraPassword
        }
    }
}
ext.setProperty('asadminDir', "${payaraHome}${File.separator}bin");
ext.setProperty('asadminFile', System.properties['os.name'].toLowerCase().contains('windows')? ['cmd', '/c', 'asadmin.bat']: './asadmin')

// Define Gradle tasks to perform similar functions to the Cargo plugin
task startServer(type:Exec) {
    workingDir asadminDir
    commandLine asadminFile

    args "start-domain"
}

task stopServer(type:Exec) {
    workingDir asadminDir
    commandLine asadminFile

    args "stop-domain"
}

task redeploy(dependsOn: 'war', type:Exec) {
    workingDir asadminDir
    commandLine asadminFile

    args "deploy", "--force=true", "--contextroot=/", "--name=stores", "${war.archivePath}"
}

task integrationTest(type: Test) {
    include '**/*IntegrationTest*'
    doFirst {
        startServer
    }
    doLast {
        stopServer
    }
}
